import{e,ai as a,aj as s,r as l,Z as c,a9 as i,y as o,z as t,C as u,ah as d,O as n,l as r}from"./index-9f197639.js";const v=["value"],m=u("svg",{class:"checkmark",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 52 52"},[u("circle",{class:"checkmark-circle",cx:"26",cy:"26",r:"25",fill:"none"}),u("path",{class:"checkmark-check",fill:"none",d:"M14.1 27.2l7.1 7.2 16.7-16.8"})],-1);let h=0;const k=e({inheritAttrs:!1,__name:"VAnimatedCheckbox",props:a({value:{},color:{default:void 0}},{modelValue:{default:()=>[],local:!0}}),emits:["update:modelValue"],setup(e){const a=e,k=s(e,"modelValue",{local:!0}),p="animated-checkbox-"+ ++h,f=l(),x=l(),w=c((()=>Boolean(k.value.find((e=>e.id===a.value.id)))));function L(){const e=[...k.value],s=e.findIndex((e=>e.id===a.value.id));s>-1?e.splice(s,1):e.push(r(a.value)),k.value=e}return i((()=>{f.value&&x.value&&(w.value?(f.value.classList.add("is-checked"),x.value.classList.add("is-opaque"),setTimeout((()=>{f.value?.classList.remove("is-unchecked")}),150)):(f.value.classList.add("is-unchecked"),f.value.classList.remove("is-checked"),setTimeout((()=>{x.value?.classList.remove("is-opaque")}),150)))})),(e,a)=>(o(),t("div",{ref_key:"element",ref:f,class:n(["animated-checkbox",[e.color&&"is-"+e.color]])},[u("input",d({id:p,type:"checkbox",value:e.value},e.$attrs,{onChange:L}),null,16,v),u("label",{for:p,class:"checkmark-wrap"},[u("div",{ref_key:"innerElement",ref:x,class:"shadow-circle"},null,512),m])],2))}});export{k as _};
